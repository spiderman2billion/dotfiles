#!/usr/bin/env bash
#
# bootstrap the basics

# check for homebrew
# install git
# install xcode
# git dotfile repository
# install oh-my-zsh
# install zsh
# add to .profile

# install homebrew
echo -n "checking for homebrew"
if ! command -v brew > /dev/null; then
    echo " - installing"
    ruby -e "$(curl --location --fail --silent --show-error https://raw.githubusercontent.com/Homebrew/install/master/install)"
    export PATH="/usr/local/bin:$PATH"
else
echo " - installed"
fi


#install git
echo "installing git"
brew install git

#install xcode command line
osx_vers=$(sw_vers -productVersion | awk -F "." '{print $2}')
cmd_line_tools_temp_file="/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress"

# Installing the latest Xcode command line tools on 10.9.x or higher
if [[ "$osx_vers" -ge 9 ]]; then

  # Create the placeholder file which is checked by the softwareupdate tool 
  # before allowing the installation of the Xcode command line tools.

  touch "$cmd_line_tools_temp_file"

  # Find the last listed update in the Software Update feed with "Command Line Tools" in the name
  cmd_line_tools=$(softwareupdate -l | awk '/\*\ Command Line Tools/ { $1=$1;print }' | tail -1 | sed 's/^[[ \t]]*//;s/[[ \t]]*$//;s/*//' | cut -c 2-)

  #Install the command line tools
  softwareupdate -i "$cmd_line_tools" 

  # Remove the temp file

  if [[ -f "$cmd_line_tools_temp_file" ]]; then
    rm "$cmd_line_tools_temp_file"
  fi
fi

#git dotfiles
echo "installing dotfiles"
git clone https://github.com/spiderman2billion/dotfiles.git

#install git
echo "installing oh-my-zsh"
unset ZSH
sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

#install zsh
brew install zsh

#setup .profile to point to zsh
rm -f ~/.profile
echo "export SHELL=/usr/local/bin/zsh" > ~/.profile
echo "[ -z "$ZSH_VERSION" ] && exec /usr/local/bin/zsh -l" >> ~/.profile



